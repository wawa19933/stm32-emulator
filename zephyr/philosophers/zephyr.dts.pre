# 0 "/Users/guillaumebour/Documents/SINTEF-Projects/Nemecys/zephyrproject/zephyr/misc/empty_file.c"
# 0 "<built-in>"
# 0 "<command-line>"
# 1 "/Users/guillaumebour/Documents/SINTEF-Projects/Nemecys/zephyrproject/zephyr/boards/arm/stm32f411e_disco/stm32f411e_disco.dts" 1






/dts-v1/;
# 1 "/Users/guillaumebour/Documents/SINTEF-Projects/Nemecys/zephyrproject/zephyr/dts/arm/st/f4/stm32f411Xe.dtsi" 1 3 4






# 1 "/Users/guillaumebour/Documents/SINTEF-Projects/Nemecys/zephyrproject/zephyr/dts/common/mem.h" 1 3 4
# 8 "/Users/guillaumebour/Documents/SINTEF-Projects/Nemecys/zephyrproject/zephyr/dts/arm/st/f4/stm32f411Xe.dtsi" 2 3 4
# 1 "/Users/guillaumebour/Documents/SINTEF-Projects/Nemecys/zephyrproject/zephyr/dts/arm/st/f4/stm32f411.dtsi" 1 3 4






# 1 "/Users/guillaumebour/Documents/SINTEF-Projects/Nemecys/zephyrproject/zephyr/dts/arm/st/f4/stm32f401.dtsi" 1 3 4






# 1 "/Users/guillaumebour/Documents/SINTEF-Projects/Nemecys/zephyrproject/zephyr/dts/arm/st/f4/stm32f4.dtsi" 1 3 4
# 9 "/Users/guillaumebour/Documents/SINTEF-Projects/Nemecys/zephyrproject/zephyr/dts/arm/st/f4/stm32f4.dtsi" 3 4
# 1 "/Users/guillaumebour/Documents/SINTEF-Projects/Nemecys/zephyrproject/zephyr/dts/arm/armv7-m.dtsi" 1 3 4


# 1 "/Users/guillaumebour/Documents/SINTEF-Projects/Nemecys/zephyrproject/zephyr/dts/common/skeleton.dtsi" 1 3 4
# 9 "/Users/guillaumebour/Documents/SINTEF-Projects/Nemecys/zephyrproject/zephyr/dts/common/skeleton.dtsi" 3 4
/ {
 #address-cells = <1>;
 #size-cells = <1>;
 chosen { };
 aliases { };
};
# 4 "/Users/guillaumebour/Documents/SINTEF-Projects/Nemecys/zephyrproject/zephyr/dts/arm/armv7-m.dtsi" 2 3 4

/ {
 soc {
  #address-cells = <1>;
  #size-cells = <1>;
  compatible = "simple-bus";
  interrupt-parent = <&nvic>;
  ranges;

  nvic: interrupt-controller@e000e100 {
   #address-cells = <1>;
   compatible = "arm,v7m-nvic";
   reg = <0xe000e100 0xc00>;
   interrupt-controller;
   #interrupt-cells = <2>;
  };

  systick: timer@e000e010 {
   compatible = "arm,armv7m-systick";
   reg = <0xe000e010 0x10>;
  };
 };
};
# 10 "/Users/guillaumebour/Documents/SINTEF-Projects/Nemecys/zephyrproject/zephyr/dts/arm/st/f4/stm32f4.dtsi" 2 3 4
# 1 "/Users/guillaumebour/Documents/SINTEF-Projects/Nemecys/zephyrproject/zephyr/include/zephyr/dt-bindings/clock/stm32f4_clock.h" 1 3 4
# 11 "/Users/guillaumebour/Documents/SINTEF-Projects/Nemecys/zephyrproject/zephyr/dts/arm/st/f4/stm32f4.dtsi" 2 3 4
# 1 "/Users/guillaumebour/Documents/SINTEF-Projects/Nemecys/zephyrproject/zephyr/include/zephyr/dt-bindings/i2c/i2c.h" 1 3 4
# 12 "/Users/guillaumebour/Documents/SINTEF-Projects/Nemecys/zephyrproject/zephyr/dts/arm/st/f4/stm32f4.dtsi" 2 3 4
# 1 "/Users/guillaumebour/Documents/SINTEF-Projects/Nemecys/zephyrproject/zephyr/include/zephyr/dt-bindings/gpio/gpio.h" 1 3 4
# 13 "/Users/guillaumebour/Documents/SINTEF-Projects/Nemecys/zephyrproject/zephyr/dts/arm/st/f4/stm32f4.dtsi" 2 3 4
# 1 "/Users/guillaumebour/Documents/SINTEF-Projects/Nemecys/zephyrproject/zephyr/include/zephyr/dt-bindings/pwm/pwm.h" 1 3 4
# 14 "/Users/guillaumebour/Documents/SINTEF-Projects/Nemecys/zephyrproject/zephyr/dts/arm/st/f4/stm32f4.dtsi" 2 3 4
# 1 "/Users/guillaumebour/Documents/SINTEF-Projects/Nemecys/zephyrproject/zephyr/include/zephyr/dt-bindings/pwm/stm32_pwm.h" 1 3 4
# 15 "/Users/guillaumebour/Documents/SINTEF-Projects/Nemecys/zephyrproject/zephyr/dts/arm/st/f4/stm32f4.dtsi" 2 3 4
# 1 "/Users/guillaumebour/Documents/SINTEF-Projects/Nemecys/zephyrproject/zephyr/include/zephyr/dt-bindings/reset/stm32f2_4_7_reset.h" 1 3 4
# 10 "/Users/guillaumebour/Documents/SINTEF-Projects/Nemecys/zephyrproject/zephyr/include/zephyr/dt-bindings/reset/stm32f2_4_7_reset.h" 3 4
# 1 "/Users/guillaumebour/Documents/SINTEF-Projects/Nemecys/zephyrproject/zephyr/include/zephyr/dt-bindings/reset/stm32-common.h" 1 3 4
# 11 "/Users/guillaumebour/Documents/SINTEF-Projects/Nemecys/zephyrproject/zephyr/include/zephyr/dt-bindings/reset/stm32f2_4_7_reset.h" 2 3 4
# 16 "/Users/guillaumebour/Documents/SINTEF-Projects/Nemecys/zephyrproject/zephyr/dts/arm/st/f4/stm32f4.dtsi" 2 3 4
# 1 "/Users/guillaumebour/Documents/SINTEF-Projects/Nemecys/zephyrproject/zephyr/include/zephyr/dt-bindings/sensor/qdec_stm32.h" 1 3 4
# 17 "/Users/guillaumebour/Documents/SINTEF-Projects/Nemecys/zephyrproject/zephyr/dts/arm/st/f4/stm32f4.dtsi" 2 3 4
# 1 "/Users/guillaumebour/Documents/SINTEF-Projects/Nemecys/zephyrproject/zephyr/dts/common/freq.h" 1 3 4
# 18 "/Users/guillaumebour/Documents/SINTEF-Projects/Nemecys/zephyrproject/zephyr/dts/arm/st/f4/stm32f4.dtsi" 2 3 4

/ {
 chosen {
  zephyr,flash-controller = &flash;
 };

 cpus {
  #address-cells = <1>;
  #size-cells = <0>;

  cpu@0 {
   device_type = "cpu";
   compatible = "arm,cortex-m4f";
   reg = <0>;
  };
 };

 sram0: memory@20000000 {
  compatible = "mmio-sram";
 };

 clocks {
  clk_hse: clk-hse {
   #clock-cells = <0>;
   compatible = "st,stm32-hse-clock";
   status = "disabled";
  };

  clk_hsi: clk-hsi {
   #clock-cells = <0>;
   compatible = "fixed-clock";
   clock-frequency = <((16) * 1000 * 1000)>;
   status = "disabled";
  };

  clk_lse: clk-lse {
   #clock-cells = <0>;
   compatible = "fixed-clock";
   clock-frequency = <32768>;
   status = "disabled";
  };

  clk_lsi: clk-lsi {
   #clock-cells = <0>;
   compatible = "fixed-clock";
   clock-frequency = <((32) * 1000)>;
   status = "disabled";
  };

  pll: pll {
   #clock-cells = <0>;
   compatible = "st,stm32f4-pll-clock";
   status = "disabled";
  };
 };

 soc {
  flash: flash-controller@40023c00 {
   compatible = "st,stm32-flash-controller", "st,stm32f4-flash-controller";
   reg = <0x40023c00 0x400>;
   interrupts = <4 0>;

   #address-cells = <1>;
   #size-cells = <1>;

   flash0: flash@8000000 {
    compatible = "st,stm32-nv-flash", "soc-nv-flash";

    write-block-size = <1>;

    max-erase-time = <4000>;
   };
  };

  rcc: rcc@40023800 {
   compatible = "st,stm32-rcc";
   #clock-cells = <2>;
   reg = <0x40023800 0x400>;

   rctl: reset-controller {
    compatible = "st,stm32-rcc-rctl";
    #reset-cells = <1>;
   };
  };

  exti: interrupt-controller@40013c00 {
   compatible = "st,stm32-exti";
   interrupt-controller;
   #interrupt-cells = <1>;
   reg = <0x40013c00 0x400>;
  };

  pinctrl: pin-controller@40020000 {
   compatible = "st,stm32-pinctrl";
   #address-cells = <1>;
   #size-cells = <1>;
   reg = <0x40020000 0x2000>;

   gpioa: gpio@40020000 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x40020000 0x400>;
    clocks = <&rcc 0x030 0x00000001>;
   };

   gpiob: gpio@40020400 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x40020400 0x400>;
    clocks = <&rcc 0x030 0x00000002>;
   };

   gpioc: gpio@40020800 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x40020800 0x400>;
    clocks = <&rcc 0x030 0x00000004>;
   };

   gpiod: gpio@40020c00 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x40020c00 0x400>;
    clocks = <&rcc 0x030 0x00000008>;
   };

   gpioe: gpio@40021000 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x40021000 0x400>;
    clocks = <&rcc 0x030 0x00000010>;
   };

   gpiof: gpio@40021400 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x40021400 0x400>;
    clocks = <&rcc 0x030 0x00000020>;
   };

   gpiog: gpio@40021800 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x40021800 0x400>;
    clocks = <&rcc 0x030 0x00000040>;
   };

   gpioh: gpio@40021c00 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x40021c00 0x400>;
    clocks = <&rcc 0x030 0x00000080>;
   };
  };

  iwdg: watchdog@40003000 {
   compatible = "st,stm32-watchdog";
   reg = <0x40003000 0x400>;
   status = "disabled";
  };

  wwdg: watchdog@40002c00 {
   compatible = "st,stm32-window-watchdog";
   reg = <0x40002C00 0x400>;
   clocks = <&rcc 0x040 0x00000800>;
   interrupts = <0 7>;
   status = "disabled";
  };

  usart1: serial@40011000 {
   compatible = "st,stm32-usart", "st,stm32-uart";
   reg = <0x40011000 0x400>;
   clocks = <&rcc 0x044 0x00000010>;
   resets = <&rctl (((0x24) << 5U) | (4U))>;
   interrupts = <37 0>;
   status = "disabled";
  };

  usart2: serial@40004400 {
   compatible = "st,stm32-usart", "st,stm32-uart";
   reg = <0x40004400 0x400>;
   clocks = <&rcc 0x040 0x00020000>;
   resets = <&rctl (((0x20) << 5U) | (17U))>;
   interrupts = <38 0>;
   status = "disabled";
  };

  usart6: serial@40011400 {
   compatible = "st,stm32-usart", "st,stm32-uart";
   reg = <0x40011400 0x400>;
   clocks = <&rcc 0x044 0x00000020>;
   resets = <&rctl (((0x24) << 5U) | (5U))>;
   interrupts = <71 0>;
   status = "disabled";
  };

  i2c1: i2c@40005400 {
   compatible = "st,stm32-i2c-v1";
   clock-frequency = <100000>;
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40005400 0x400>;
   clocks = <&rcc 0x040 0x00200000>;
   interrupts = <31 0>, <32 0>;
   interrupt-names = "event", "error";
   status = "disabled";
  };

  i2c2: i2c@40005800 {
   compatible = "st,stm32-i2c-v1";
   clock-frequency = <100000>;
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40005800 0x400>;
   clocks = <&rcc 0x040 0x00400000>;
   interrupts = <33 0>, <34 0>;
   interrupt-names = "event", "error";
   status = "disabled";
  };

  i2c3: i2c@40005c00 {
   compatible = "st,stm32-i2c-v1";
   clock-frequency = <100000>;
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40005c00 0x400>;
   clocks = <&rcc 0x040 0x00800000>;
   interrupts = <72 0>, <73 0>;
   interrupt-names = "event", "error";
   status = "disabled";
  };

  spi1: spi@40013000 {
   compatible = "st,stm32-spi";
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40013000 0x400>;
   clocks = <&rcc 0x044 0x00001000>;
   interrupts = <35 5>;
   status = "disabled";
  };

  usbotg_fs: usb@50000000 {
   compatible = "st,stm32-otgfs";
   reg = <0x50000000 0x40000>;
   interrupts = <67 0>;
   interrupt-names = "otgfs";
   num-bidir-endpoints = <4>;
   ram-size = <1280>;
   maximum-speed = "full-speed";
   phys = <&otgfs_phy>;
   clocks = <&rcc 0x034 0x00000080>;
   status = "disabled";
  };

  timers1: timers@40010000 {
   compatible = "st,stm32-timers";
   reg = <0x40010000 0x400>;
   clocks = <&rcc 0x044 0x00000001>;
   resets = <&rctl (((0x24) << 5U) | (0U))>;
   interrupts = <24 0>, <25 0>, <26 0>, <27 0>;
   interrupt-names = "brk", "up", "trgcom", "cc";
   st,prescaler = <0>;
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    #pwm-cells = <3>;
   };

   qdec {
    compatible = "st,stm32-qdec";
    status = "disabled";
    st,input-filter-level = <0>;
   };
  };

  timers2: timers@40000000 {
   compatible = "st,stm32-timers";
   reg = <0x40000000 0x400>;
   clocks = <&rcc 0x040 0x00000001>;
   resets = <&rctl (((0x20) << 5U) | (0U))>;
   interrupts = <28 0>;
   interrupt-names = "global";
   st,prescaler = <0>;
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    #pwm-cells = <3>;
   };

   counter {
    compatible = "st,stm32-counter";
    status = "disabled";
   };

   qdec {
    compatible = "st,stm32-qdec";
    status = "disabled";
    st,input-filter-level = <0>;
   };
  };

  timers3: timers@40000400 {
   compatible = "st,stm32-timers";
   reg = <0x40000400 0x400>;
   clocks = <&rcc 0x040 0x00000002>;
   resets = <&rctl (((0x20) << 5U) | (1U))>;
   interrupts = <29 0>;
   interrupt-names = "global";
   st,prescaler = <0>;
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    #pwm-cells = <3>;
   };

   counter {
    compatible = "st,stm32-counter";
    status = "disabled";
   };

   qdec {
    compatible = "st,stm32-qdec";
    status = "disabled";
    st,input-filter-level = <0>;
   };
  };

  timers4: timers@40000800 {
   compatible = "st,stm32-timers";
   reg = <0x40000800 0x400>;
   clocks = <&rcc 0x040 0x00000004>;
   resets = <&rctl (((0x20) << 5U) | (2U))>;
   interrupts = <30 0>;
   interrupt-names = "global";
   st,prescaler = <0>;
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    #pwm-cells = <3>;
   };

   counter {
    compatible = "st,stm32-counter";
    status = "disabled";
   };

   qdec {
    compatible = "st,stm32-qdec";
    status = "disabled";
    st,input-filter-level = <0>;
   };
  };

  timers5: timers@40000c00 {
   compatible = "st,stm32-timers";
   reg = <0x40000c00 0x400>;
   clocks = <&rcc 0x040 0x00000008>;
   resets = <&rctl (((0x20) << 5U) | (3U))>;
   interrupts = <50 0>;
   interrupt-names = "global";
   st,prescaler = <0>;
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    #pwm-cells = <3>;
   };

   counter {
    compatible = "st,stm32-counter";
    status = "disabled";
   };

   qdec {
    compatible = "st,stm32-qdec";
    status = "disabled";
    st,input-filter-level = <0>;
   };
  };

  timers9: timers@40014000 {
   compatible = "st,stm32-timers";
   reg = <0x40014000 0x400>;
   clocks = <&rcc 0x044 0x00010000>;
   resets = <&rctl (((0x24) << 5U) | (16U))>;
   interrupts = <24 0>;
   interrupt-names = "global";
   st,prescaler = <0>;
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    #pwm-cells = <3>;
   };

   counter {
    compatible = "st,stm32-counter";
    status = "disabled";
   };
  };

  timers10: timers@40014400 {
   compatible = "st,stm32-timers";
   reg = <0x40014400 0x400>;
   clocks = <&rcc 0x044 0x00020000>;
   resets = <&rctl (((0x24) << 5U) | (17U))>;
   interrupts = <25 0>;
   interrupt-names = "global";
   st,prescaler = <0>;
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    #pwm-cells = <3>;
   };

   counter {
    compatible = "st,stm32-counter";
    status = "disabled";
   };
  };

  timers11: timers@40014800 {
   compatible = "st,stm32-timers";
   reg = <0x40014800 0x400>;
   clocks = <&rcc 0x044 0x00040000>;
   resets = <&rctl (((0x24) << 5U) | (18U))>;
   interrupts = <26 0>;
   interrupt-names = "global";
   st,prescaler = <0>;
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    #pwm-cells = <3>;
   };

   counter {
    compatible = "st,stm32-counter";
    status = "disabled";
   };
  };

  rtc: rtc@40002800 {
   compatible = "st,stm32-rtc";
   reg = <0x40002800 0x400>;
   interrupts = <41 0>;
   clocks = <&rcc 0x040 0x10000000>;
   prescaler = <32768>;
   status = "disabled";

   bbram: backup_regs {
    compatible = "st,stm32-bbram";
    st,backup-regs = <20>;
    status = "disabled";
   };
  };

  adc1: adc@40012000 {
   compatible = "st,stm32-adc";
   reg = <0x40012000 0x400>;
   clocks = <&rcc 0x044 0x00000100>;
   interrupts = <18 0>;
   status = "disabled";
   vref-mv = <3300>;
   #io-channel-cells = <1>;
   has-temp-channel;
   has-vref-channel;
  };

  dma1: dma@40026000 {
   compatible = "st,stm32-dma-v1";
   #dma-cells = <4>;
   reg = <0x40026000 0x400>;
   interrupts = <11 0 12 0 13 0 14 0 15 0 16 0 17 0 47 0>;
   clocks = <&rcc 0x030 0x200000>;
   status = "disabled";
  };

  dma2: dma@40026400 {
   compatible = "st,stm32-dma-v1";
   #dma-cells = <4>;
   reg = <0x40026400 0x400>;
   interrupts = <56 0 57 0 58 0 59 0 60 0 68 0 69 0 70 0>;
   clocks = <&rcc 0x030 0x400000>;
   st,mem2mem;
   status = "disabled";
  };

  sdmmc1: sdmmc@40012c00 {
   compatible = "st,stm32-sdmmc";
   reg = <0x40012c00 0x400>;
   clocks = <&rcc 0x044 0x00000800>;
   interrupts = <49 0>;
   status = "disabled";
  };
 };

 die_temp: dietemp {
  compatible = "st,stm32-temp-cal";
  ts-cal1-addr = <0x1FFF7A2C>;
  ts-cal2-addr = <0x1FFF7A2E>;
  ts-cal1-temp = <30>;
  ts-cal2-temp = <110>;
  ts-cal-vrefanalog = <3300>;
  io-channels = <&adc1 16>;
  status = "disabled";
 };

 otgfs_phy: otgfs_phy {
  compatible = "usb-nop-xceiv";
  #phy-cells = <0>;
 };
};

&nvic {
 arm,num-irq-priority-bits = <4>;
};
# 8 "/Users/guillaumebour/Documents/SINTEF-Projects/Nemecys/zephyrproject/zephyr/dts/arm/st/f4/stm32f401.dtsi" 2 3 4

/ {
 soc {
  spi2: spi@40003800 {
   compatible = "st,stm32-spi";
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40003800 0x400>;
   clocks = <&rcc 0x040 0x00004000>;
   interrupts = <36 5>;
   status = "disabled";
  };

  spi3: spi@40003c00 {
   compatible = "st,stm32-spi";
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40003c00 0x400>;
   clocks = <&rcc 0x040 0x00008000>;
   interrupts = <51 5>;
   status = "disabled";
  };

  spi4: spi@40013400 {
   compatible = "st,stm32-spi";
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40013400 0x400>;
   clocks = <&rcc 0x044 0x00002000>;
   interrupts = <84 5>;
   status = "disabled";
  };

  i2s2: i2s@40003800 {
   compatible = "st,stm32-i2s";
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40003800 0x400>;
   clocks = <&rcc 0x040 0x00004000>;
   interrupts = <36 5>;
   dmas = <&dma1 4 0 0x400 0x3
    &dma1 3 0 0x400 0x3>;
   dma-names = "tx", "rx";
   status = "disabled";
  };

  i2s3: i2s@40003c00 {
   compatible = "st,stm32-i2s";
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40003c00 0x400>;
   clocks = <&rcc 0x040 0x00008000>;
   interrupts = <51 5>;
   dmas = <&dma1 5 0 0x400 0x3
    &dma1 0 0 0x400 0x3>;
   dma-names = "tx", "rx";
   status = "disabled";
  };

 };
};
# 8 "/Users/guillaumebour/Documents/SINTEF-Projects/Nemecys/zephyrproject/zephyr/dts/arm/st/f4/stm32f411.dtsi" 2 3 4

/ {
 soc {
  spi5: spi@40015000 {
   compatible = "st,stm32-spi";
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40015000 0x400>;
   clocks = <&rcc 0x044 0x00100000>;
   interrupts = <85 5>;
   status = "disabled";
  };

  i2s1: i2s@40013000 {
   compatible = "st,stm32-i2s";
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40013000 0x400>;
   clocks = <&rcc 0x044 0x00001000>;
   interrupts = <35 5>;
   dmas = <&dma2 3 3 0x400 0x3
    &dma2 2 3 0x400 0x3>;
   dma-names = "tx", "rx";
   status = "disabled";
  };

  i2s4: i2s@40013400 {
   compatible = "st,stm32-i2s";
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40013400 0x400>;
   clocks = <&rcc 0x044 0x00002000>;
   interrupts = <84 5>;
   dmas = <&dma2 1 4 0x400 0x3
    &dma2 0 4 0x400 0x3>;
   dma-names = "tx", "rx";
   status = "disabled";
  };

  i2s5: i2s@40015000 {
   compatible = "st,stm32-i2s";
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40015000 0x400>;
   clocks = <&rcc 0x044 0x00100000>;
   interrupts = <85 5>;
   dmas = <&dma2 6 7 0x400 0x3
    &dma2 5 7 0x400 0x3>;
   dma-names = "tx", "rx";
   status = "disabled";
  };
 };

 die_temp: dietemp {
  io-channels = <&adc1 18>;
 };
};
# 9 "/Users/guillaumebour/Documents/SINTEF-Projects/Nemecys/zephyrproject/zephyr/dts/arm/st/f4/stm32f411Xe.dtsi" 2 3 4

/ {
 sram0: memory@20000000 {
  reg = <0x20000000 ((128) * 1024)>;
 };

 soc {
  flash-controller@40023c00 {
   flash0: flash@8000000 {
    reg = <0x08000000 ((512) * 1024)>;
   };
  };
 };
};
# 9 "/Users/guillaumebour/Documents/SINTEF-Projects/Nemecys/zephyrproject/zephyr/boards/arm/stm32f411e_disco/stm32f411e_disco.dts" 2
# 1 "/Users/guillaumebour/Documents/SINTEF-Projects/Nemecys/zephyrproject/modules/hal/stm32/dts/st/f4/stm32f411v(c-e)tx-pinctrl.dtsi" 1 3 4






# 1 "/Users/guillaumebour/Documents/SINTEF-Projects/Nemecys/zephyrproject/zephyr/include/zephyr/dt-bindings/pinctrl/stm32-pinctrl.h" 1 3 4
# 10 "/Users/guillaumebour/Documents/SINTEF-Projects/Nemecys/zephyrproject/zephyr/include/zephyr/dt-bindings/pinctrl/stm32-pinctrl.h" 3 4
# 1 "/Users/guillaumebour/Documents/SINTEF-Projects/Nemecys/zephyrproject/zephyr/include/zephyr/dt-bindings/pinctrl/stm32-pinctrl-common.h" 1 3 4
# 11 "/Users/guillaumebour/Documents/SINTEF-Projects/Nemecys/zephyrproject/zephyr/include/zephyr/dt-bindings/pinctrl/stm32-pinctrl.h" 2 3 4
# 8 "/Users/guillaumebour/Documents/SINTEF-Projects/Nemecys/zephyrproject/modules/hal/stm32/dts/st/f4/stm32f411v(c-e)tx-pinctrl.dtsi" 2 3 4

/ {
 soc {
  pinctrl: pin-controller@40020000 {



   /omit-if-no-ref/ adc1_in0_pa0: adc1_in0_pa0 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_in1_pa1: adc1_in1_pa1 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_in2_pa2: adc1_in2_pa2 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((2) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_in3_pa3: adc1_in3_pa3 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((3) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_in4_pa4: adc1_in4_pa4 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((4) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_in5_pa5: adc1_in5_pa5 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((5) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_in6_pa6: adc1_in6_pa6 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_in7_pa7: adc1_in7_pa7 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_in8_pb0: adc1_in8_pb0 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_in9_pb1: adc1_in9_pb1 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_in10_pc0: adc1_in10_pc0 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_in11_pc1: adc1_in11_pc1 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_in12_pc2: adc1_in12_pc2 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((2) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_in13_pc3: adc1_in13_pc3 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((3) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_in14_pc4: adc1_in14_pc4 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((4) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_in15_pc5: adc1_in15_pc5 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((5) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };



   /omit-if-no-ref/ analog_pa0: analog_pa0 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa1: analog_pa1 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa2: analog_pa2 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((2) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa3: analog_pa3 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((3) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa4: analog_pa4 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((4) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa5: analog_pa5 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((5) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa6: analog_pa6 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa7: analog_pa7 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa8: analog_pa8 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((8) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa9: analog_pa9 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((9) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa10: analog_pa10 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((10) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa11: analog_pa11 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((11) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa12: analog_pa12 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((12) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa13: analog_pa13 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((13) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa14: analog_pa14 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((14) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa15: analog_pa15 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((15) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb0: analog_pb0 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb1: analog_pb1 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb2: analog_pb2 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((2) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb3: analog_pb3 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((3) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb4: analog_pb4 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((4) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb5: analog_pb5 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((5) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb6: analog_pb6 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb7: analog_pb7 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb8: analog_pb8 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((8) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb9: analog_pb9 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((9) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb10: analog_pb10 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((10) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb12: analog_pb12 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((12) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb13: analog_pb13 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((13) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb14: analog_pb14 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((14) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb15: analog_pb15 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((15) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc0: analog_pc0 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc1: analog_pc1 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc2: analog_pc2 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((2) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc3: analog_pc3 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((3) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc4: analog_pc4 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((4) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc5: analog_pc5 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((5) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc6: analog_pc6 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc7: analog_pc7 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc8: analog_pc8 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((8) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc9: analog_pc9 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((9) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc10: analog_pc10 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((10) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc11: analog_pc11 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((11) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc12: analog_pc12 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((12) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc13: analog_pc13 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((13) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc14: analog_pc14 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((14) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc15: analog_pc15 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((15) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd0: analog_pd0 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd1: analog_pd1 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd2: analog_pd2 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((2) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd3: analog_pd3 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((3) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd4: analog_pd4 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((4) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd5: analog_pd5 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((5) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd6: analog_pd6 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd7: analog_pd7 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd8: analog_pd8 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((8) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd9: analog_pd9 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((9) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd10: analog_pd10 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((10) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd11: analog_pd11 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((11) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd12: analog_pd12 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((12) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd13: analog_pd13 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((13) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd14: analog_pd14 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((14) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd15: analog_pd15 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((15) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe0: analog_pe0 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe1: analog_pe1 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe2: analog_pe2 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((2) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe3: analog_pe3 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((3) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe4: analog_pe4 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((4) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe5: analog_pe5 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((5) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe6: analog_pe6 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe7: analog_pe7 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe8: analog_pe8 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((8) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe9: analog_pe9 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((9) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe10: analog_pe10 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((10) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe11: analog_pe11 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((11) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe12: analog_pe12 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((12) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe13: analog_pe13 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((13) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe14: analog_pe14 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((14) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe15: analog_pe15 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((15) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_ph0: analog_ph0 {
    pinmux = <((((('H') - 'A') & 0xFU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_ph1: analog_ph1 {
    pinmux = <((((('H') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };



   /omit-if-no-ref/ i2c1_scl_pb6: i2c1_scl_pb6 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c1_scl_pb8: i2c1_scl_pb8 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((8) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c2_scl_pb10: i2c2_scl_pb10 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((10) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c3_scl_pa8: i2c3_scl_pa8 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((8) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };



   /omit-if-no-ref/ i2c1_sda_pb7: i2c1_sda_pb7 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c1_sda_pb9: i2c1_sda_pb9 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((9) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c2_sda_pb3: i2c2_sda_pb3 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((3) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c2_sda_pb9: i2c2_sda_pb9 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((9) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c3_sda_pb4: i2c3_sda_pb4 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((4) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c3_sda_pb8: i2c3_sda_pb8 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((8) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c3_sda_pc9: i2c3_sda_pc9 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((9) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };



   /omit-if-no-ref/ i2s1_ck_pa5: i2s1_ck_pa5 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((5) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ i2s1_ck_pb3: i2s1_ck_pb3 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((3) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ i2s2_ck_pb10: i2s2_ck_pb10 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((10) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ i2s2_ck_pb13: i2s2_ck_pb13 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((13) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ i2s2_ck_pc7: i2s2_ck_pc7 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ i2s2_ck_pd3: i2s2_ck_pd3 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((3) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ i2s3_ck_pb3: i2s3_ck_pb3 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((3) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ i2s3_ck_pb12: i2s3_ck_pb12 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((12) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ i2s3_ck_pc10: i2s3_ck_pc10 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((10) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ i2s4_ck_pb13: i2s4_ck_pb13 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((13) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ i2s4_ck_pe2: i2s4_ck_pe2 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((2) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ i2s4_ck_pe12: i2s4_ck_pe12 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((12) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ i2s5_ck_pb0: i2s5_ck_pb0 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((0) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ i2s5_ck_pe2: i2s5_ck_pe2 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((2) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ i2s5_ck_pe12: i2s5_ck_pe12 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((12) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };



   /omit-if-no-ref/ i2s1_sd_pa7: i2s1_sd_pa7 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ i2s1_sd_pb5: i2s1_sd_pb5 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((5) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ i2s2_sd_pb15: i2s2_sd_pb15 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((15) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ i2s2_sd_pc3: i2s2_sd_pc3 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((3) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ i2s3_sd_pb5: i2s3_sd_pb5 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((5) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ i2s3_sd_pc12: i2s3_sd_pc12 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((12) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ i2s3_sd_pd6: i2s3_sd_pd6 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ i2s4_sd_pa1: i2s4_sd_pa1 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ i2s4_sd_pe6: i2s4_sd_pe6 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ i2s4_sd_pe14: i2s4_sd_pe14 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((14) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ i2s5_sd_pa10: i2s5_sd_pa10 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((10) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ i2s5_sd_pb8: i2s5_sd_pb8 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((8) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ i2s5_sd_pe6: i2s5_sd_pe6 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ i2s5_sd_pe14: i2s5_sd_pe14 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((14) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
   };



   /omit-if-no-ref/ i2s1_ws_pa4: i2s1_ws_pa4 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((4) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ i2s1_ws_pa15: i2s1_ws_pa15 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((15) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ i2s2_ws_pb9: i2s2_ws_pb9 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((9) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ i2s2_ws_pb12: i2s2_ws_pb12 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((12) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ i2s3_ws_pa4: i2s3_ws_pa4 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((4) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ i2s3_ws_pa15: i2s3_ws_pa15 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((15) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ i2s4_ws_pb12: i2s4_ws_pb12 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((12) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ i2s4_ws_pe4: i2s4_ws_pe4 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((4) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ i2s4_ws_pe11: i2s4_ws_pe11 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((11) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ i2s5_ws_pb1: i2s5_ws_pb1 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ i2s5_ws_pe4: i2s5_ws_pe4 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((4) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ i2s5_ws_pe11: i2s5_ws_pe11 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((11) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
   };



   /omit-if-no-ref/ sdio_cmd_pa6: sdio_cmd_pa6 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdio_d1_pa8: sdio_d1_pa8 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((8) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdio_d2_pa9: sdio_d2_pa9 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((9) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdio_d0_pb4: sdio_d0_pb4 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((4) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdio_d3_pb5: sdio_d3_pb5 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((5) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdio_d0_pb7: sdio_d0_pb7 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdio_d4_pb8: sdio_d4_pb8 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((8) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdio_d5_pb9: sdio_d5_pb9 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((9) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdio_d7_pb10: sdio_d7_pb10 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((10) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdio_d6_pb14: sdio_d6_pb14 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((14) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdio_ck_pb15: sdio_ck_pb15 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((15) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdio_d6_pc6: sdio_d6_pc6 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdio_d7_pc7: sdio_d7_pc7 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdio_d0_pc8: sdio_d0_pc8 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((8) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdio_d1_pc9: sdio_d1_pc9 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((9) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdio_d2_pc10: sdio_d2_pc10 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((10) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdio_d3_pc11: sdio_d3_pc11 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((11) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdio_ck_pc12: sdio_ck_pc12 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((12) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdio_cmd_pd2: sdio_cmd_pd2 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((2) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };



   /omit-if-no-ref/ spi1_miso_pa6: spi1_miso_pa6 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi1_miso_pb4: spi1_miso_pb4 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((4) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi2_miso_pb14: spi2_miso_pb14 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((14) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi2_miso_pc2: spi2_miso_pc2 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((2) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi3_miso_pb4: spi3_miso_pb4 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((4) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi3_miso_pc11: spi3_miso_pc11 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((11) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi4_miso_pa11: spi4_miso_pa11 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((11) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi4_miso_pe5: spi4_miso_pe5 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((5) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi4_miso_pe13: spi4_miso_pe13 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((13) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi5_miso_pa12: spi5_miso_pa12 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((12) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi5_miso_pe5: spi5_miso_pe5 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((5) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi5_miso_pe13: spi5_miso_pe13 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((13) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    bias-pull-down;
   };



   /omit-if-no-ref/ spi1_mosi_pa7: spi1_mosi_pa7 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi1_mosi_pb5: spi1_mosi_pb5 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((5) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi2_mosi_pb15: spi2_mosi_pb15 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((15) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi2_mosi_pc3: spi2_mosi_pc3 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((3) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi3_mosi_pb5: spi3_mosi_pb5 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((5) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi3_mosi_pc12: spi3_mosi_pc12 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((12) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi3_mosi_pd6: spi3_mosi_pd6 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi4_mosi_pa1: spi4_mosi_pa1 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi4_mosi_pe6: spi4_mosi_pe6 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi4_mosi_pe14: spi4_mosi_pe14 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((14) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi5_mosi_pa10: spi5_mosi_pa10 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((10) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi5_mosi_pb8: spi5_mosi_pb8 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((8) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi5_mosi_pe6: spi5_mosi_pe6 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi5_mosi_pe14: spi5_mosi_pe14 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((14) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    bias-pull-down;
   };



   /omit-if-no-ref/ spi1_nss_pa4: spi1_nss_pa4 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((4) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ spi1_nss_pa15: spi1_nss_pa15 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((15) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ spi2_nss_pb9: spi2_nss_pb9 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((9) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ spi2_nss_pb12: spi2_nss_pb12 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((12) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ spi3_nss_pa4: spi3_nss_pa4 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((4) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ spi3_nss_pa15: spi3_nss_pa15 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((15) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ spi4_nss_pb12: spi4_nss_pb12 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((12) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ spi4_nss_pe4: spi4_nss_pe4 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((4) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ spi4_nss_pe11: spi4_nss_pe11 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((11) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ spi5_nss_pb1: spi5_nss_pb1 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ spi5_nss_pe4: spi5_nss_pe4 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((4) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ spi5_nss_pe11: spi5_nss_pe11 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((11) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    bias-pull-up;
   };



   /omit-if-no-ref/ spi1_sck_pa5: spi1_sck_pa5 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((5) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ spi1_sck_pb3: spi1_sck_pb3 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((3) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ spi2_sck_pb10: spi2_sck_pb10 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((10) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ spi2_sck_pb13: spi2_sck_pb13 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((13) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ spi2_sck_pc7: spi2_sck_pc7 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ spi2_sck_pd3: spi2_sck_pd3 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((3) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ spi3_sck_pb3: spi3_sck_pb3 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((3) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    bias-pull-down;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ spi3_sck_pb12: spi3_sck_pb12 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((12) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-down;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ spi3_sck_pc10: spi3_sck_pc10 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((10) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    bias-pull-down;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ spi4_sck_pb13: spi4_sck_pb13 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((13) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    bias-pull-down;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ spi4_sck_pe2: spi4_sck_pe2 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((2) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ spi4_sck_pe12: spi4_sck_pe12 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((12) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ spi5_sck_pb0: spi5_sck_pb0 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((0) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    bias-pull-down;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ spi5_sck_pe2: spi5_sck_pe2 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((2) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    bias-pull-down;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ spi5_sck_pe12: spi5_sck_pe12 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((12) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    bias-pull-down;
    slew-rate = "very-high-speed";
   };



   /omit-if-no-ref/ tim10_ch1_pb8: tim10_ch1_pb8 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((8) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch1n_pa7: tim1_ch1n_pa7 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch1_pa8: tim1_ch1_pa8 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((8) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch2_pa9: tim1_ch2_pa9 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((9) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch3_pa10: tim1_ch3_pa10 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((10) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch4_pa11: tim1_ch4_pa11 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((11) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch2n_pb0: tim1_ch2n_pb0 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((0) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch3n_pb1: tim1_ch3n_pb1 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim11_ch1_pb9: tim11_ch1_pb9 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((9) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch1n_pb13: tim1_ch1n_pb13 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((13) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch2n_pb14: tim1_ch2n_pb14 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((14) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch3n_pb15: tim1_ch3n_pb15 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((15) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch1n_pe8: tim1_ch1n_pe8 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((8) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch1_pe9: tim1_ch1_pe9 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((9) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch2n_pe10: tim1_ch2n_pe10 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((10) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch2_pe11: tim1_ch2_pe11 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((11) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch3n_pe12: tim1_ch3n_pe12 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((12) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch3_pe13: tim1_ch3_pe13 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((13) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch4_pe14: tim1_ch4_pe14 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((14) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim2_ch1_pa0: tim2_ch1_pa0 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((0) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim2_ch2_pa1: tim2_ch2_pa1 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim2_ch3_pa2: tim2_ch3_pa2 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((2) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim2_ch4_pa3: tim2_ch4_pa3 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((3) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim2_ch1_pa5: tim2_ch1_pa5 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((5) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim2_ch1_pa15: tim2_ch1_pa15 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((15) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim2_ch2_pb3: tim2_ch2_pb3 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((3) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim2_ch3_pb10: tim2_ch3_pb10 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((10) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim3_ch1_pa6: tim3_ch1_pa6 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim3_ch2_pa7: tim3_ch2_pa7 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim3_ch3_pb0: tim3_ch3_pb0 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((0) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim3_ch4_pb1: tim3_ch4_pb1 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim3_ch1_pb4: tim3_ch1_pb4 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((4) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim3_ch2_pb5: tim3_ch2_pb5 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((5) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim3_ch1_pc6: tim3_ch1_pc6 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim3_ch2_pc7: tim3_ch2_pc7 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim3_ch3_pc8: tim3_ch3_pc8 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((8) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim3_ch4_pc9: tim3_ch4_pc9 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((9) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim4_ch1_pb6: tim4_ch1_pb6 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim4_ch2_pb7: tim4_ch2_pb7 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim4_ch3_pb8: tim4_ch3_pb8 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((8) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim4_ch4_pb9: tim4_ch4_pb9 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((9) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim4_ch1_pd12: tim4_ch1_pd12 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((12) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim4_ch2_pd13: tim4_ch2_pd13 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((13) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim4_ch3_pd14: tim4_ch3_pd14 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((14) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim4_ch4_pd15: tim4_ch4_pd15 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((15) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim5_ch1_pa0: tim5_ch1_pa0 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((0) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim5_ch2_pa1: tim5_ch2_pa1 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim5_ch3_pa2: tim5_ch3_pa2 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((2) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim5_ch4_pa3: tim5_ch4_pa3 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((3) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim9_ch1_pa2: tim9_ch1_pa2 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((2) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim9_ch2_pa3: tim9_ch2_pa3 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((3) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim9_ch1_pe5: tim9_ch1_pe5 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((5) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim9_ch2_pe6: tim9_ch2_pe6 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };



   /omit-if-no-ref/ usart1_cts_pa11: usart1_cts_pa11 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((11) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ usart2_cts_pa0: usart2_cts_pa0 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((0) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ usart2_cts_pd3: usart2_cts_pd3 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((3) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };



   /omit-if-no-ref/ usart1_rts_pa12: usart1_rts_pa12 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((12) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ usart2_rts_pa1: usart2_rts_pa1 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ usart2_rts_pd4: usart2_rts_pd4 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((4) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };



   /omit-if-no-ref/ usart1_rx_pa10: usart1_rx_pa10 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((10) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usart1_rx_pb3: usart1_rx_pb3 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((3) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usart1_rx_pb7: usart1_rx_pb7 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usart2_rx_pa3: usart2_rx_pa3 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((3) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usart2_rx_pd6: usart2_rx_pd6 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usart6_rx_pa12: usart6_rx_pa12 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((12) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usart6_rx_pc7: usart6_rx_pc7 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
   };



   /omit-if-no-ref/ usart1_tx_pa9: usart1_tx_pa9 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((9) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ usart1_tx_pa15: usart1_tx_pa15 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((15) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ usart1_tx_pb6: usart1_tx_pb6 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ usart2_tx_pa2: usart2_tx_pa2 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((2) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ usart2_tx_pd5: usart2_tx_pd5 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((5) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ usart6_tx_pa11: usart6_tx_pa11 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((11) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ usart6_tx_pc6: usart6_tx_pc6 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    bias-pull-up;
   };



   /omit-if-no-ref/ usb_otg_fs_sof_pa8: usb_otg_fs_sof_pa8 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((8) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usb_otg_fs_vbus_pa9: usb_otg_fs_vbus_pa9 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((9) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usb_otg_fs_id_pa10: usb_otg_fs_id_pa10 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((10) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usb_otg_fs_dm_pa11: usb_otg_fs_dm_pa11 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((11) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usb_otg_fs_dp_pa12: usb_otg_fs_dp_pa12 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((12) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
   };

  };
 };
};
# 10 "/Users/guillaumebour/Documents/SINTEF-Projects/Nemecys/zephyrproject/zephyr/boards/arm/stm32f411e_disco/stm32f411e_disco.dts" 2

/ {
 model = "STMicroelectronics STM32F411E-DISCO board";
 compatible = "st,stm32f411e-disco";

 chosen {
  zephyr,console = &usart2;
  zephyr,shell-uart = &usart2;
  zephyr,sram = &sram0;
  zephyr,flash = &flash0;
 };

 leds {
  compatible = "gpio-leds";
  orange_led_3: led_3 {
   gpios = <&gpiod 13 (0 << 0)>;
   label = "User LD3";
  };
  green_led_4: led_4 {
   gpios = <&gpiod 12 (0 << 0)>;
   label = "User LD4";
  };
  red_led_5: led_5 {
   gpios = <&gpiod 14 (0 << 0)>;
   label = "User LD5";
  };
  blue_led_6: led_6 {
   gpios = <&gpiod 15 (0 << 0)>;
   label = "User LD6";
  };
 };

 pwmleds {
  compatible = "pwm-leds";
  green_pwm_led: green_pwm_led {
   pwms = <&pwm4 1 (((20) * 1000UL) * 1000UL) (0 << 0)>;
  };
  orange_pwm_led: orange_pwm_led {
   pwms = <&pwm4 2 (((20) * 1000UL) * 1000UL) (0 << 0)>;
  };
  red_pwm_led: red_pwm_led {
   pwms = <&pwm4 3 (((20) * 1000UL) * 1000UL) (0 << 0)>;
  };
  blue_pwm_led: blue_pwm_led {
   pwms = <&pwm4 4 (((20) * 1000UL) * 1000UL) (0 << 0)>;
  };
 };

 gpio_keys {
  compatible = "gpio-keys";
  user_button: button {
   label = "User";
   gpios = <&gpioa 0 (1 << 0)>;
  };
 };

 aliases {
  led0 = &orange_led_3;
  led1 = &green_led_4;
  led2 = &red_led_5;
  led3 = &blue_led_6;
  sw0 = &user_button;
  pwm-led0 = &green_pwm_led;
  pwm-led1 = &orange_pwm_led;
  pwm-led2 = &red_pwm_led;
  pwm-led3 = &blue_pwm_led;
  magn0 = &lsm303agr_magn;
  accel0 = &lsm303agr_accel;
 };
};

&clk_lsi {
 status = "okay";
};

&clk_hse {
 clock-frequency = <((8) * 1000 * 1000)>;
 status = "okay";
};

&pll {
 div-m = <4>;
 mul-n = <96>;
 div-p = <2>;
 div-q = <4>;
 clocks = <&clk_hse>;
 status = "okay";
};

&rcc {
 clocks = <&pll>;
 clock-frequency = <((96) * 1000 * 1000)>;
 ahb-prescaler = <1>;
 apb1-prescaler = <2>;
 apb2-prescaler = <1>;
};

&timers4 {
 st,prescaler = <10000>;
 status = "okay";

 pwm4: pwm {
  status = "okay";
  pinctrl-0 = <&tim4_ch1_pd12
        &tim4_ch2_pd13
        &tim4_ch3_pd14
        &tim4_ch4_pd15>;
  pinctrl-names = "default";
 };
};

&i2c1 {
 pinctrl-0 = <&i2c1_scl_pb6 &i2c1_sda_pb9>;
 pinctrl-names = "default";
 status = "okay";
 clock-frequency = <400000>;

 lsm303agr_magn: lsm303agr-magn@1e {
  compatible = "st,lis2mdl", "st,lsm303agr-magn";
  status = "okay";
  reg = <0x1e>;
  irq-gpios = <&gpioe 2 (0 << 0)>;
 };

 lsm303agr_accel: lsm303agr-accel@19 {
  compatible = "st,lis2dh", "st,lsm303agr-accel";
  status = "okay";
  reg = <0x19>;
  irq-gpios = <&gpioe 4 (0 << 0)>,
     <&gpioe 5 (0 << 0)>;
 };
};

&usart2 {
 pinctrl-0 = <&usart2_tx_pa2 &usart2_rx_pa3>;
 pinctrl-names = "default";
 current-speed = <115200>;
 status = "okay";
};

&rtc {
 clocks = <&rcc 0x040 0x10000000>,
   <&rcc 0x005 ((((0x70) & 0xFFU) << 0U) | (((8) & 0x1FU) << 8U) | (((3) & 0x7U) << 13U) | (((2) & 0x7U) << 16U))>;
 status = "okay";
};

zephyr_udc0: &usbotg_fs {
 pinctrl-0 = <&usb_otg_fs_dm_pa11 &usb_otg_fs_dp_pa12>;
 pinctrl-names = "default";
 status = "okay";
};
# 0 "<command-line>" 2
# 1 "/Users/guillaumebour/Documents/SINTEF-Projects/Nemecys/zephyrproject/zephyr/misc/empty_file.c"
